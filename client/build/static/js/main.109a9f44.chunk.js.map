{"version":3,"sources":["utils.js","Components/Login.jsx","App.js","Components/Post.jsx","Components/Nav.jsx","Components/ChatWindow.jsx","Components/Home.jsx","Reducers/likeReducer.js","Reducers/isLoggedReducer.js","Reducers/userReducer.js","Reducers/allReducers.js","index.js"],"names":["GET_TOKEN","gql","GET_POSTS","ADD_COMMENT","Center","styled","div","Login","useState","username","setUsername","password","setPassword","error","setError","history","useHistory","useLazyQuery","onCompleted","localStorage","token","data","login","push","onError","getToken","onChange","e","target","value","type","placeholder","onClick","variables","userName","App","MyDiv","Post","props","Comments","comments","setComments","comment","setComment","useMutation","addComment","src","photoPath","alt","style","width","padding","user","caption","map","i","key","User","postId","id","Nav","socket","io","path","Position","MyBox","ChatWindow","useSelector","state","userReducer","message","name","setState","chat","setChat","useEffect","on","className","index","onTextChange","variant","label","emit","Home","useQuery","loading","JSON","parse","post","allPosts","ele","likeReducer","action","isLoggedReducer","allReducers","combineReducers","store","createStore","composeWithDevTools","httpLink","createHttpLink","uri","authLink","setContext","_","headers","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","exact","document","getElementById"],"mappings":"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","file":"static/js/main.109a9f44.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const API_URL = (process.env.NODE_ENV===\"development\") ? \"http://localhost:6777\" : \"https://solo-react-project.herokuapp.com\"\n\nexport const GET_TOKEN = gql`\nquery Token ($userName: String!, $password: String!) {\n  login(userName: $userName, password: $password) {\n    token\n    id\n  }\n}`\n\nexport const GET_POSTS = gql`\n  { post\n    {\n      allPosts\n    }\n  }`\n\nexport const ADD_COMMENT = gql`\n  mutation Comment ($postId: Int!, $comment: String!) {\n    addComment(postId: $postId, comment:$comment) {\n      id\n    }\n  }`","import React, { useState } from \"react\"\nimport { GET_TOKEN } from \"../utils\"\nimport styled from \"styled-components\"\nimport { useLazyQuery } from \"@apollo/client\"\nimport { useHistory } from \"react-router-dom\"\n\nconst Center = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  min-height: 100vh;`\n\nexport default function Login () {\n  const [username, setUsername] = useState(null)\n  const [password, setPassword] = useState(null)\n  const [error, setError] = useState(null)\n  const history = useHistory()\n\n  const [getToken, { data }] = useLazyQuery(GET_TOKEN, {\n    onCompleted: ()=>{ \n      localStorage.token = data.login.token; \n      // window.location.href= \"http://localhost:6777/home\"\n      history.push(\"/home\")\n    },\n    onError: (data) => setError(\"Invalid Credentials\")\n  })\n\n  return (\n    <Center>\n      { error ? <p> {error} </p> : null }\n      <input onChange={e=>setUsername(e.target.value)} type=\"text\" placeholder=\"username\" />\n      <input onChange={e=>setPassword(e.target.value)} type=\"text\" placeholder=\"password\" />\n      <input type=\"button\" value=\"Login\" onClick={ () => { getToken({ variables: {userName:username, password:password}})}}/>\n    </Center>\n  );\n}\n\n\n","import React from 'react'\nimport Login from './Components/Login'\n\nexport default function App() {\n\n  return (\n    <>\n      <Login/>\n    </>\n  )\n}\n\n","import React, {  useState } from 'react'\nimport { useMutation } from '@apollo/client';\nimport styled from 'styled-components'\nimport { ADD_COMMENT } from \"../utils\"\n\nconst MyDiv = styled.div`\n  font-size: 11px;   \n  color: rgb(38,38,38);\n  width: 555px;  \n  border:solid grey 1px;  \n  background-color: rgb(243,243,243);\n  outline-width: 0;`\n\nexport default function Post (props) {\n\n  const [comments, setComments] = useState(props.value.Comments)\n  const [comment, setComment] = useState(null)\n  const [addComment] = useMutation(ADD_COMMENT)\n\n    return (  \n      <MyDiv>                                                     \n        <img src={ props.value.photoPath } alt=\"\" style={{width: \"550px\", padding:\"1px 1px\"}} />\n        <p> { `${props.value.user.userName}: ${props.value.caption}`} </p>\n        <p> { comments[0] ? \"Comments:\":null} </p>\n        <div> { comments[0] ?\n          comments.map( (comments,i) => <p key={i}> {`${ comments.User.userName }:${ comments.comment }`} </p>)                \n        : null } </div>\n        <input onChange={ e => setComment( e.target.value ) } type=\"text\" placeholder=\"comment\" style={{width: \"400px\"}}/>\n        <input type=\"button\" value=\"Comment\" onClick={ () => {           \n            addComment({ variables: {postId:props.value.id, comment:comment}})\n            setComments( [ ...comments, {User: {userName:\"deepak\"} , comment:comment } ] )\n\n          }}         \n          style={{width: \"100px\"}} />                                                                 \n      </MyDiv>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst MyDiv = styled.div`\n// padding-bottom:400px;\noverflow: hidden;\nwidth:100%;\nposition: fixed;\nmargin: -9px -8px;\nwidth:100vw;\ndisplay:flex;\njustify-content: \nspace-between;\nfont-size: 11px;   \ncolor: rgb(38,38,38);\nborder:solid grey 1px;  \nbackground-color: rgb(243,243,243);\nleft:9px;   \n-width: 0;`\n\nexport default function Nav (props) {\n    return (  \n      <MyDiv>\n      <h1 style={{\"paddingLeft\":\"100px\"}}>Logo</h1> \n      <h1 style={{\"paddingRight\":\"100px\"}}>Links</h1> \n      </MyDiv>\n        )\n        }                                              ","import React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\nimport styled from 'styled-components'\nimport {Button, Input as input} from 'antd'\nimport {useSelector} from 'react-redux'\nimport {API_URL} from '../utils'\n// import TextField from '@material-ui/core/TextField'\n\nconst socket = io(API_URL, {path: \"/ws\"})\n\nconst Position = styled.div`\n  position: fixed;\n  bottom: 5px;\n  right: 5px;`\n\nconst MyBox = styled.div`\n  font-size: 11px;  \n  height: 111px;  \n  color: rgb(38,38,38);\n  width: 255px;  \n  border:solid grey 1px;  \n  background-color: rgb(243,243,243);\n  left:9px;  \n  top: -8px;  \n  outline-width: 0;\n  overflow-y:auto;`\n\nexport default function ChatWindow() {\n  // const like = useSelector(state => state.likeReducer)\n  const username = useSelector(state => state.userReducer.username)\n\n  const [state, setState] = useState({ message: '', name: '' })\n  const [chat, setChat] = useState([])\n\n  useEffect(() => {\n    socket.on('message', ({ name, message }) => {\n      setChat([...chat, { name, message }])\n    })\n  })\n\n  const onTextChange = e => { setState({ ...state, [e.target.name]: e.target.value }) }\n\n  const sendMessage = e => {\n    const { name, message } = state\n    socket.emit('message', { name, message })\n    setState({ message: '', name })\n  }\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index} >\n        <h3> {username}: <span>{message}</span> </h3>\n      </div>\n    ))\n  }\n\n  return (\n    <Position> \n      <MyBox className=\"render-chat\">{renderChat()}</MyBox>\n      <input name=\"message\" onChange={ e => onTextChange(e) } value={state.message} id=\"outlined-multiline-static\" variant=\"outlined\" label=\"Message\" />\n      <Button onClick={sendMessage} style={{width:\"92px\"}}> Send </Button>\n    </Position>\n  )\n}\n\n\n\n\n\n","import React from 'react'\nimport { useQuery } from '@apollo/client';\nimport styled from 'styled-components'\nimport {GET_POSTS} from \"../utils\"\nimport Post from \"./Post\"\nimport Nav from \"./Nav\"\nimport ChatWindow from \"./ChatWindow\"\n\nconst Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  min-height: 100vh;`\n\nexport default function Home () {\n\n  const { loading, error, data } = useQuery(GET_POSTS)\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error :</p>\n    return (\n      <>\n      <Nav/>\n      <Center>\n        {\n          JSON.parse(data.post.allPosts)\n            .map((ele,i)=> <Post key={i} value={ele}/> )\n        } \n      </Center>\n      <ChatWindow/>\n      </>\n    )\n}\n","const likeReducer = (state=0, action) => {\n  switch(action.type){\n    case 'LIKE_INCREMENT': return state++\n    case 'LIKE_DECREMENT': return state--\n    default: return state\n  }\n}\n\nexport default likeReducer","const isLoggedReducer = (state=false, action) => {\n  switch(action.type){\n    case 'SIGN_IN': return !state\n    default: return state\n  }\n}\n\nexport default isLoggedReducer","const userReducer = (state={username:\"deepak\"}, action) => {\n  switch(action.type){\n    case 'LIKE_INCREMENT': return state\n    case 'LIKE_DECREMENT': return state\n    default: return state\n  }\n}\n\nexport default userReducer","import likeReducer from \"./likeReducer\"\nimport isLoggedReducer from \"./isLoggedReducer\"\nimport userReducer from \"./userReducer\"\nimport {combineReducers} from \"redux\"\n\n const allReducers = combineReducers({\n  likeReducer,\n  isLoggedReducer,\n  userReducer\n})\n\nexport default allReducers","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router,  Switch,  Route} from \"react-router-dom\"\nimport App from './App'\nimport Home from './Components/Home'\nimport {createStore} from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {Provider} from \"react-redux\"\nimport allReducers from \"./Reducers/allReducers\"\n\nimport { createHttpLink,  ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\n//GLOBAL STORE\nconst store = createStore(allReducers, composeWithDevTools())\nconst httpLink = createHttpLink({uri: \"/gql\"})\n//heroku\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\"> <App/> </Route>\n          <Route exact path=\"/home\"> <Home/> </Route>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  </Provider>,\n   \n  document.getElementById('root')\n)\n"],"sourceRoot":""}